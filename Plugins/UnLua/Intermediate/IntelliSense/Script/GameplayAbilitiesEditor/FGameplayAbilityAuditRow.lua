---This contains all of the data we gather about a Blueprint during the Audit process
---@class FGameplayAbilityAuditRow : FTableRowBase
---@field protected ActivationPath EGameplayAbilityActivationPath @Does the Blueprint override Activate, ActivateByEvent, or is it left up to Native code?
---@field protected InstancingPolicy integer @The InstancingPolicy of the GameplayAbility (Instancing Behavior can affect memory, which functions can be called, what data can be used, and replication)
---@field protected NetExecutionPolicy integer @The NetExecutionPolicy of the GameplayAbility
---@field protected NetSecurityPolicy integer @The NetSecurityPolicy of the GameplayAbility
---@field protected ReplicationPolicy integer @The Replication Policy which controls if the instance itself is replicated (and therefore controls variable replication)
---@field protected AssetTags TArray<string> @Gameplay Tags that the Asset itself has (AbilityTags)
---@field protected CostGE string @If the GameplayAbility has a Cost GameplayEffect, this field will tell us which one it's using.
---@field protected CooldownGE string @If the GameplayAbility has a Cooldown GameplayEffect, this field will tell us which one it's using.
---@field protected bOverridesCanActivate boolean @Does the Blueprint implement CanActivate? It can be an indication that there are complex rules for triggering.
---@field protected bOverridesShouldAbilityRespondToEvent boolean @Does the Blueprint implement ShouldAbilityRespondToEvent? It can be an indication that there are complex rules for triggering.
---@field protected bChecksCostManually boolean @Does the Blueprint CheckCosts? If so it's an indication that this ability is a multi-step ability.
---@field protected bCommitAbility boolean @Does the Blueprint Commit?  If not (and we are a non-native BP), the costs will never apply and we are breaking our expected flow.
---@field protected EndAbility EGameplayAbilityEndInBlueprints @How does the Blueprint call EndAbility?  If missing, this Ability can be assumed to be a persistent one and removed from Gameplay code (e.g. while tags are active)
---@field protected ReferencedTags TArray<string> @All of the known referenced tags (list may be incomplete -- does not take into account Blueprint Tags)
---@field protected Functions TArray<string> @List of functions the Blueprint calls
---@field protected AsyncTasks TArray<string> @List of AsyncTasks the Blueprint uses
---@field protected MutatedVariables TArray<string> @List of Variables the Blueprint mutates
local FGameplayAbilityAuditRow = {}
