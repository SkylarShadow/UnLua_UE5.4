---Uses a simple spring model to interpolate a vector from Current to Target.
---@class FRigUnit_SpringInterpVectorV2 : FRigVMFunction_SimBase
---@field public Target FVector @Rest/target position of the spring.
---@field public Strength number @The spring strength determines how hard it will pull towards the target. The value is the frequency at which it will oscillate when there is no damping.
---@field public CriticalDamping number @The amount of damping in the spring. Set it smaller than 1 to make the spring oscillate before stabilizing on the target. Set it equal to 1 to reach the target without overshooting. Set it higher than one to make the spring take longer to reach the target.
---@field public Force FVector @Extra force to apply (since the mass is 1, this is also the acceleration).
---@field public bUseCurrentInput boolean @If true, then the Current input will be used to initialize the state, and is required to be a variable that holds the current state. If false then the Target value will be used to initialize the state and the Current input will be ignored/unnecessary as a state will be maintained by this node.
---@field public Current FVector @Current position of the spring.
---@field public TargetVelocityAmount number @The amount that the velocity should be passed through to the spring. A value of 1 will result in more responsive output, but if the input is noisy or has step changes, these discontinuities will be passed through to the output much more than if a smaller value such as 0 is used.
---@field public bInitializeFromTarget boolean @If true, then the initial value will be taken from the target value, and not from the current value.
---@field public Result FVector @New position of the spring after delta time.
---@field public Velocity FVector @Velocity
---@field public SimulatedResult FVector
---@field public SpringState FVectorSpringState
local FRigUnit_SpringInterpVectorV2 = {}
