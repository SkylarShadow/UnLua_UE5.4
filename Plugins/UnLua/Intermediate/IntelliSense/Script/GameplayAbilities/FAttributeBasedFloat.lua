---Struct representing a float whose magnitude is dictated by a backing attribute and a calculation policy, follows basic form of:
---(Coefficient * (PreMultiplyAdditiveValue + [Eval'd Attribute Value According to Policy])) + PostMultiplyAdditiveValue
---@class FAttributeBasedFloat
---@field public Coefficient FScalableFloat @Coefficient to the attribute calculation
---@field public PreMultiplyAdditiveValue FScalableFloat @Additive value to the attribute calculation, added in before the coefficient applies
---@field public PostMultiplyAdditiveValue FScalableFloat @Additive value to the attribute calculation, added in after the coefficient applies
---@field public BackingAttribute FGameplayEffectAttributeCaptureDefinition @Attribute backing the calculation
---@field public AttributeCurve FCurveTableRowHandle @If a curve table entry is specified, the attribute will be used as a lookup into the curve instead of using the attribute directly.
---@field public AttributeCalculationType EAttributeBasedFloatCalculationType @Calculation policy in regards to the attribute
---@field public FinalChannel EGameplayModEvaluationChannel @Channel to terminate evaluation on when using AttributeEvaluatedUpToChannel calculation type
---@field public SourceTagFilter FGameplayTagContainer @Filter to use on source tags; If specified, only modifiers applied with all of these tags will factor into the calculation
---@field public TargetTagFilter FGameplayTagContainer @Filter to use on target tags; If specified, only modifiers applied with all of these tags will factor into the calculation
local FAttributeBasedFloat = {}
