---Structure with publicly exposed information about an asset type. These can be loaded out of a config file or constructed at runtime
---@class FPrimaryAssetTypeInfo
---@field public PrimaryAssetType string @The logical name for this type of Primary Asset
---@field private AssetBaseClass TSoftClassPtr<UObject> @Base Class of all assets of this type
---@field public AssetBaseClassLoaded TSubclassOf<UObject> @Runtime cached copy of asset base class, this will only be correct if FillRuntimeData has been called
---@field public bHasBlueprintClasses boolean @True if the assets loaded are blueprints classes, false if they are normal UObjects
---@field public bIsEditorOnly boolean @If true this type will not cause anything to be cooked; the AssetManager will use instances of this type to define chunk assignments and NeverCook rules, but will ignore AlwaysCook rules. Assets labeled by instances of this type will need to be reference by another PrimaryAsset, or by something outside the AssetManager, to be cooked.
---@field private Directories TArray<FDirectoryPath> @Directories to search for this asset type
---@field private SpecificAssets TArray<FSoftObjectPath> @Individual assets to scan
---@field public Rules FPrimaryAssetRules @Default management rules for this type, individual assets can be overridden
---@field public AssetScanPaths TArray<string> @Combination of directories and individual assets to search for this asset type. Will have the Directories and Assets added to it but may include virtual paths
---@field public bIsDynamicAsset boolean @True if this is an asset created at runtime that has no on disk representation. Cannot be set in config
---@field public NumberOfAssets integer @Number of tracked assets of that type
local FPrimaryAssetTypeInfo = {}
