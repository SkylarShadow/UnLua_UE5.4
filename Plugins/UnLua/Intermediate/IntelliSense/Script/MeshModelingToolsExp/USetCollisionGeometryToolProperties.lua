---@class USetCollisionGeometryToolProperties : UInteractiveToolPropertySet
---@field public GeometryType ECollisionGeometryType @What kind of shapes to fit to the input. Note: Will be overridden by any enabled 'Auto Detect' settings, if close-fitting 'Auto Detect' shapes are found.
---@field public bAppendToExisting boolean @Whether to keep the existing collision shapes, and append new shapes to that set. Otherwise, existing collision will be cleared.
---@field public bUseWorldSpace boolean @When using multiple inputs to generate our collision, whether to use the world-space position of those input. If false, inputs will be considered as if they were all centered at the same location.
---@field public InputMode ESetCollisionGeometryInputMode @What parts of the input should be separately fit with collision shapes
---@field public bRemoveContained boolean @Whether to attempt to detect and remove collision shapes that are fully contained inside other collision shapes
---@field public bEnableMaxCount boolean @Whether to discard all but MaxCount collision geometries with the largest volume
---@field public MaxCount integer @The maximum number of collision shapes to generate. If necessary, the shapes with smallest volume will be discarded to meet this count.
---@field public MinThickness number @Generated collision shapes will be expanded if they are smaller than this in any dimension. Not supported for Level Sets or Convex Decompositions (Convex Hulls with more than one hull per mesh).
---@field public bDetectBoxes boolean @Whether to override the requested Geometry Type with a box whenever a box closely fits the input shape
---@field public bDetectSpheres boolean @Whether to override the requested Geometry Type with a sphere whenever a sphere closely fits the input shape
---@field public bDetectCapsules boolean @Whether to override the requested Geometry Type with a capsule whenever a capsule closely fits the input shape
---@field public bMergeCollisionShapes boolean @Whether to attempt to merge the generated collision shapes, when there are more than MergeAboveCount
---@field public MergeAboveCount integer @Attempt to merge generated collision shapes until there are at most this many
---@field public bUseNegativeSpaceInMerge boolean @Whether to protect negative space while merging the generated collision shapes, using the negative space settings
---@field public bSimplifyHulls boolean @Whether to simplify the convex hull
---@field public HullTargetFaceCount integer @Target number of faces in the simplified hull
---@field public MaxHullsPerMesh integer @How many convex hulls can be used to approximate each mesh
---@field public ConvexDecompositionSearchFactor number @How much to search the space of possible decompositions beyond MaxHullsPerMesh; for larger values, will do additional work to try to better approximate mesh features (but resulting hulls may overlap more)
---@field public AddHullsErrorTolerance number @Error tolerance for adding more convex hulls, in cm.  For volumetric errors, the value will be cubed (so a value of 10 indicates a 10x10x10 volume worth of error is acceptable).
---@field public MinPartThickness number @Minimum part thickness for convex decomposition, in cm; hulls thinner than this will be merged into adjacent hulls, if possible.
---@field public bUseNegativeSpaceInDecomposition boolean @Whether to guide the convex decomposition to prioritize not filling negative space of the input shape
---@field public NegativeSpaceTolerance number @Negative space closer to the input than this tolerance distance can be filled in
---@field public NegativeSpaceMinRadius number @Minimum radius of negative space to protect; tunnels with radius smaller than this could be filled in
---@field public bIgnoreInternalNegativeSpace boolean @Whether to ignore negative space that is not accessible by traversing from the convex hull (via paths w/ radius of at least Negative Space Tolerance)
---@field public HullTolerance number @If > 0, the polygon used to generate the swept hull will be simplified up to this distance tolerance, in cm
---@field public SweepAxis EProjectedHullAxis @How to choose which direction to sweep when creating a swept hull
---@field public LevelSetResolution integer @Level set grid resolution along longest grid axis
---@field public SetCollisionType ECollisionGeometryMode @Set how the physics system should interpret collision shapes on the output mesh. Does not affect what collision shapes are generated by this tool.
---@field public bShowTargetMesh boolean @Show/Hide target mesh
---@field public bUsingMultipleInputs boolean @Set by the tool to tell the settings object whether the tool is using multiple inputs.
local USetCollisionGeometryToolProperties = {}

