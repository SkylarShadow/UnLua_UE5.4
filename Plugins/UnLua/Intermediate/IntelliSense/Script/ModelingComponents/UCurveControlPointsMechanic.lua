---A mechanic for displaying a sequence of control points and moving them about. Has an interactive initialization mode for
---first setting the points.
---When editing, hold shift to select multiple points. Hold Ctrl to add an extra point along an edge. To add points to either end of
---the sequence, first select either the first or last point and then hold Ctrl.
---Backspace deletes currently selected points. In edit mode, holding Shift generally toggles the snapping behavior (makes it opposite
---of the current SnappingEnabled setting), though this is not yet implemented while the gizmo is being dragged.
---TODO:
---- Make it possible to open/close loop in edit mode
---- Improve display of occluded control points (checkerboard the material)
---- Allow deselection of vertices by clicking away?
---- Lump the point/line set components into PreviewGeometryActor.
---@class UCurveControlPointsMechanic : UInteractionMechanic
---@field public ClickBehavior USingleClickInputBehavior @Behaviors used for moving points around and hovering them
---@field public HoverBehavior UMouseHoverBehavior
---@field protected PreviewGeometryActor APreviewGeometryActor @Used for displaying points/segments
---@field protected DrawnControlPoints UPointSetComponent
---@field protected DrawnControlSegments ULineSetComponent
---@field protected PreviewPoint UPointSetComponent @These get drawn separately because the other components have to be 1:1 with the control points structure, which would make it complicated to keep track of special id's.
---@field protected PreviewSegment ULineSetComponent
---@field protected PointTransformProxy UTransformProxy @Support for gizmo. Since the points aren't individual components, we don't actually use UTransformProxy for the transform forwarding- we just use it for the callbacks.
---@field protected PointTransformGizmo UCombinedTransformGizmo
local UCurveControlPointsMechanic = {}

